DROP TABLE IF EXISTS users, categories, compilations, events, events_compilations, requests, locations CASCADE;
CREATE TABLE IF NOT EXISTS users
(
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name  VARCHAR(250) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE
);
CREATE TABLE IF NOT EXISTS locations
(
    id  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name  VARCHAR(100),
    lat FLOAT NOT NULL,
    lon FLOAT NOT NULL,
    radius FLOAT DEFAULT 0,
    status VARCHAR(100)
);
CREATE TABLE IF NOT EXISTS categories
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(250) NOT NULL UNIQUE
);
CREATE TABLE IF NOT EXISTS compilations
(
    id     BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pinned BOOLEAN     NOT NULL,
    title  VARCHAR(50) NOT NULL
);
CREATE TABLE IF NOT EXISTS events
(
    id                BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    annotation        VARCHAR(2000) NOT NULL,
    description       VARCHAR(7000) NOT NULL,
    event_date         TIMESTAMP WITHOUT TIME ZONE,
    paid              BOOLEAN       NOT NULL,
    participant_limit  BIGINT       NOT NULL,
    request_moderation BOOLEAN       NOT NULL,
    title             VARCHAR(120)  NOT NULL,
    state             VARCHAR(10)       NOT NULL,
    created_on         TIMESTAMP WITHOUT TIME ZONE,
    published_on       TIMESTAMP WITHOUT TIME ZONE,
    initiator_id      BIGINT REFERENCES users (id) ON DELETE CASCADE,
    category_id     BIGINT REFERENCES categories (id) ON DELETE CASCADE,
    location_id       BIGINT REFERENCES locations (id) ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS events_compilations
(
    events_id       BIGINT REFERENCES events (id) ON DELETE CASCADE,
    compilations_id BIGINT REFERENCES compilations (id) ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS requests
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created      TIMESTAMP WITHOUT TIME ZONE,
    status       VARCHAR(255) NOT NULL,
    requester_id BIGINT REFERENCES users (id) ON DELETE CASCADE,
    event_id    BIGINT REFERENCES events (id) ON DELETE CASCADE
);
CREATE OR REPLACE FUNCTION distance(lat1 float, lon1 float, lat2 float, lon2 float)
    RETURNS float
AS
'
declare
    dist float = 0;
    rad_lat1 float;
    rad_lat2 float;
    theta float;
    rad_theta float;
BEGIN
    IF lat1 = lat2 AND lon1 = lon2
    THEN
        RETURN dist;
    ELSE
        -- переводим градусы широты в радианы
        rad_lat1 = pi() * lat1 / 180;
        -- переводим градусы долготы в радианы
        rad_lat2 = pi() * lat2 / 180;
        -- находим разность долгот
        theta = lon1 - lon2;
        -- переводим градусы в радианы
        rad_theta = pi() * theta / 180;
        -- находим длину ортодромии
        dist = sin(rad_lat1) * sin(rad_lat2) + cos(rad_lat1) * cos(rad_lat2) * cos(rad_theta);

        IF dist > 1
            THEN dist = 1;
        END IF;

        dist = acos(dist);
        -- переводим радианы в градусы
        dist = dist * 180 / pi();
        -- переводим градусы в километры
        dist = dist * 60 * 1.8524;

        RETURN dist;
    END IF;
END;
'
LANGUAGE PLPGSQL;